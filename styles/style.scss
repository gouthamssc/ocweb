@import url("https://fonts.googleapis.com/css?family=Roboto:300,400,400i,700");

@mixin angle($pseudo, $flip: false, $angle: 2.5deg) {
	// Possible values for $pseudo are: before, after, both
	@if $pseudo == "before" or $pseudo == "after" or $pseudo == "both" {
		position: relative;
		z-index: 1;
		$selector: if($pseudo == "both", "&:before,&:after", "&:#{$pseudo}");

		#{$selector} {
			background: inherit;
			content: "";
			display: block;
			height: 50%;
			left: 0;
			position: absolute;
			right: 0;
			z-index: -1;
			-webkit-backface-visibility: hidden; // for Chrome Windows
		}

		@if $pseudo == "before" {
			#{$selector} {
				top: 0;

				@if $flip {
					transform: skewY($angle * -1);
					transform-origin: 0 0;
				} @else {
					transform: skewY($angle);
					transform-origin: 100% 0;
				}
			}
		}

		@if $pseudo == "after" {
			#{$selector} {
				bottom: 0;

				@if $flip {
					transform: skewY($angle);
					transform-origin: 0 100%;
				} @else {
					transform: skewY($angle * -1);
					transform-origin: 100%;
				}
			}
		}

		@if $pseudo == "both" {
			&:before {
				top: 0;

				@if $flip {
					transform: skewY($angle * -1);
					transform-origin: 0 0;
				} @else {
					transform: skewY($angle);
					transform-origin: 100% 0;
				}
			}

			&:after {
				bottom: 0;

				@if $flip {
					transform: skewY($angle);
					transform-origin: 0 0;
				} @else {
					transform: skewY($angle * -1);
					transform-origin: 100%;
				}
			}
		}
	}
}

// slanted edges here
.edge--bottom {
	@include angle(after);
}

.edge--bottom--reverse {
	@include angle(after, true);
}

.edge--top {
	@include angle(before);
}

.edge--top--reverse {
	@include angle(before, true);
}

.edge--both {
	@include angle(both);
}

.edge--both--reverse {
	@include angle(both, true);
}

html,
body {
	width: 100%;
	height: 100%;
	min-height: 100%;
	box-sizing: border-box;
}

body {
	font-family: "Roboto", Arial, sans-serif;
	font-size: 16px;
	position: relative;
}

.btn-pink {
	background: #ea4c89;
	color: #fff;
	
	&:hover {
		background: #d6427b;
		color: #fff;
	}
}

header {
	background: #3097ff;
	width: 100%;
	height: 400px;
	position: relative;

	.title-info {
		z-index: 900;
		position: absolute;
		top: 50%;
		transform: translatey(-50%);
		right: 0;
		margin-right: 25px;
		text-align: right;

		h1 {
			font-weight: bold;
			color: #fff;
			font-size: 64px;
		}

		p {
			color: #9ce6ff;
			font-weight: 300;
			font-size: 21px;
			text-transform: uppercase;
		}
		
		.social-links {
			
			a {
				text-decoration: none;
				padding: 5px;
				
				i {
					color: #fff;
				}
				
				&:hover i {
					color: #9ce6ff;
				}
			}
		}
	}
}

@media screen and (max-width: 991px) {
	header {
		.title-info {
			right: unset;
			width: 100%;
			margin: 25px auto;
			text-align: center;

			h1 {
				font-size: 54px;
			}

			p {
				font-size: 18px;
			}
		}
	}
}

.navbar {
	width: 100%;
	position: fixed;
	display: flex;
	flex-flow: row wrap;
	justify-content: flex-end;
	z-index: 1000;
	background: #5199ff;
}

.navbar-collapse {
	flex-grow: unset;
}

.navbar-nav {
	align-items: center;
}

.nav-link {
	text-transform: uppercase;
	color: #9ce6ff;
	font-weight: 300;

	&:hover {
		color: #fff;
		border-radius: 10px;
	}
}

.nav-link.active {
	color: #000;
	background: #fff;
	border-radius: 10px;
}

.navbar-toggler {
	background: white;
	span {
		color: #3097ff;
	}
}

@media screen and (max-width: 991px) {
	.navbar-nav {
		.nav-link {
			display: block;
			padding: 0.75rem 25%;
		}
	}
}

section {
	width: 100%;
	height: 100vh;
	position: relative;

	.intro {
		text-align: center;
		width: 80%;
		height: auto;
		margin: 0 auto;
		display: flex;
		flex-direction: column;

		h2 {
			font-size: 48px;
			font-weight: bold;
			color: black;
		}

		p {
			color: #d6d6d6;
			font-weight: 300;
			font-size: 16px;
		}
	}

	.content {
		display: flex;
		flex-flow: row wrap;
		align-items: center;
		align-content: center;
		justify-content: center;
		margin:-10px;
		
		& > * {
			flex: 1 1 160px;
			margin: 10px;
		}

		.col {
			flex: 1;
			display: flex;
			justify-content: center;
			
			a {
				cursor: pointer;

				img {
					transition: all 0.5s ease-in-out;
				}

				&:hover {
					img {
						transform: scale(1.1);
					}
				}
			}
		}
	}
}

@media screen and (max-width: 991px) {
	section {
		height: auto;

		.intro {
			margin-top: 50px;
			margin-bottom: 25px;
			
			h2 {
				font-size: 36px;
			}
			
			p {
				font-size: 14px;
			}
		}
		
		.content {
			diplay: block;
		}
	}
}

.modal-body {
	overflow: scroll;

	a {
		text-decoration: none;

		.thumb {
			width: 100px;
			height: 100px;
			line-height: 100px;
			text-align: center;
			font-weight: 300;
			font-size: 12px;
			color: #fff;
			background: #bc2ee8;
			margin: 10px;
		}
	}
}

.modal-body a:hover {
	.thumb {
		background: #9d26c1;
	}
}

.code-inline {
	display: inline;
	background: white;
	border: solid 1px #dedede;
	padding: 0.2em 0.5em;
	font-size: 0.9em;
}

.code-multiline {
	display: block;
	background: white;
	border: solid 1px #dedede;
	padding: 0.7em 1em;
	font-size: 0.9em;
	overflow-x: auto;
}

code {
	font-family: "Menlo-Regular";
}

.text-overflow-ellipsis {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.sf_code_syntax_string {
	color: #d33905;
}

.sf_code_syntax_comment {
	color: #838383;
}

.sf_code_syntax_documentation_comment {
	color: #128901;
}

.sf_code_syntax_number {
	color: #0e73a2;
}

.sf_code_syntax_project {
	color: #5b2599;
}

.sf_code_syntax_keyword {
	color: #0e73a2;
}

.sf_code_syntax_character {
	color: #1b00ce;
}

.sf_code_syntax_preprocessor {
	color: #920448;
}
